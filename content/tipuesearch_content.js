var tipuesearch = {"pages": [{'title': 'Week', 'text': 'Week1-5 \n Week6-9 \n Week10-14 \n Week15-18 \n', 'tags': '', 'url': 'Week.html'}, {'title': 'week1-5', 'text': 'week 1 架設個人網站 \n 1.在自己的github內建立新倉儲cd2020 \n 2.git clone  https://github.com/s40723247/cd2020.git \n 3.git submodule add  https://github.com/mdecourse/cmsimde.git \n 4.到 cmsimde,輸入python -m pip install flask_cors \n 5.把cmsimde裡面up_dir資料夾內的東西複製到cd2020資料夾內 \n 6.到cd2020 打 python wsgi.py 開始編輯倉儲 \n \n week 2 線上直播會議&將可攜系統中的 python3.7.3 更新至 python3.8.2 版本 \n \n \n 將可攜系統中的 python3.7.3 更新至 python3.8.2 版本 \n step1 先在自己資料夾內新增一個cd2020，然後在cd2020內新增一個資料夾data，在data內再新增py382及 wscite432、portablegit 。 \n step2\xa0進入ptrhon 官網 \xa0 \n step3 到downloads內點選 Latest Python 3 Release - Python 3.8.2 \n step4\xa0滑到最下面，找到 Windows x86-64 executable installer \xa0 下載 \n step5\xa0開始下載，把pip選項取消，按next把檔案下載至資料夾py382 \n \n step6\xa0下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮到data下的wscite432 \n step7 建立start.bat及stop.bat \n start.bat: \n @echo   off \n set   Disk = y \n subst  % Disk % :  "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set   HomePath = % Disk % :\\home \n set   HomeDrive = % Disk % :\\home \n set   Home = % Disk % :\\home \n set   USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set   PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set   PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set   PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set   path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set   path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set   path_git = % Disk % :\\portablegit\\ bin ; \n set   path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n \xa0 \xa0 \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n stop.bat: \n @echo   off \n set   Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill  / IM python.exe  / F \n taskkill  / IM pythonw.exe  / F \n taskkill  / IM scite.exe  / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst  % Disk % :  / D \n REM 關閉 cmd 指令視窗 \n taskkill  / IM cmd.exe  / F \n \xa0 \xa0 \n EXIT \n \n step8 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0到data下 \n step9\xa0下載PortableGit\xa0 64-bit Git for Windows Portable \xa0到\xa0 portablegit下 \n step10\xa0 安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下 \n step11 執行指令 ，將python3.8.2版本缺少的模組下載下來 \n \n python get - pip.py \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n   week3\xa0\xa0 CoppeliaSim User Manual 內容研究 \n \n /downloads/40723247CoppeliaSim User Manual-已轉檔.pdf \n \n', 'tags': '', 'url': 'week1-5.html'}, {'title': 'week6-9', 'text': '解釋如何使用OBS在YOUTUBE上開直播 \n 1.先設定一個場景 \n 2.來源的部分新增一個視訊擷取裝置(鏡頭)與顯示器擷取(螢幕畫面) \n 3.設定串流金鑰 (YOUTUBE開直播會給一個金鑰) \n 4.開始串流 \n 以下是教學影片 \n \n 線上遠距離教學被抽到的直播內容 :\xa0 \n \n Week7 \n 練習用Vrep建立四輪車(鍵盤控制) \n 1.先建立車子本體 \n 2.建立車子輪胎 \n 3.建立傳動 \n 4.設置傳動動力20 \n 5.複製四個輪子並調整 \n 6.開始模擬 \n 7.成功後導入鍵盤控制的程式碼 \n 8.模擬 \n 以下是練習影片 (觀看組長影片邊練習) \n \n', 'tags': '', 'url': 'week6-9.html'}, {'title': 'week10-14', 'text': 'week10 \n gm用戶登陸設定 \n \n 先登入@gm帳號 \n 至網站\xa0 https://console.developers.google.com \n 許可google API \n OAuth同意畫面按下同意 \n 選擇內部用戶類型 \n 建立憑證 \n 在已授權的 JavaScript 來源，新增URL\xa0https://localhost 、 https://localhost:8443 \n 在已授權的重新導向 URI， 新增URL\xa0 https://localhost 、 https://localhost:8443/login/google/ \n 儲存帳號密碼到tmp內檔名改成自己的學號 \n git clone 老師的CD2020PJ1克隆下來到tmp內 \n 用LEO更改CD2020PJ1資料夾內的cd2020pj1.leo並儲存 \n 打開wsgi.py就會自動導入畫面即完成 \n \n 以下是我的練習影片 \n \n WEEK11 \n \n 先下載事前資料 \n 匯入ubuntu \n 設定虛擬主機的網路埠號 \n 啟動ubuntu \n 輸入密碼kmol2020 \n 輸入xterm&開啟 \n 輸入ls查看內容 \n cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh \n 打開檔案sdc.ttt \n 將檔案中的car_model.py放入編譯器執行 \n 完成 \n \n \n \n WEEK12 \n 老師隨機抽點每組各9個人，大家一起協同維護網站。 \n 分組倉儲 :\xa0 https://github.com/mdecourse/cdbw12-1 \n 分組網站 :\xa0 http://mde.tw/cdbw12-1/content/index.html \n 這個是我推在我們分組網站的與commit紀錄 \n \n \n', 'tags': '', 'url': 'week10-14.html'}, {'title': 'week15-18', 'text': '', 'tags': '', 'url': 'week15-18.html'}, {'title': 'Group meeting', 'text': '', 'tags': '', 'url': 'Group meeting.html'}, {'title': 'bg3 第一次小組會議', 'text': '第三組第一次會議 \n 會議流程: \n \n 直播會議,組員簽到 \n 討論工作分配\xa0 \n 問題提問 \n \n 作業一: \n \n 請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n \xa0描述如何為 Windows 10 64 位系統準備一個可移植的 Python 編程系 統，以允許在 Github 上維護 CMSiMDE 網站，Pelican 博客和 Reveal.js 演示文稿？ \n \xa0您需要從  \xa0 http://www.coppeliarobotics.com/helpFiles/index.html  了解什 麼來實現四輪機器人？ \n \n 注意事項: \n \n 作業一必須在 3/26 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 \n \xa0每周務必上傳進度。 \n \xa0不會做的可以問會的同學或在 gitter 上發問。 \n \xa0請依每個人的作業一 pdf 檔、網站內容，進行互評 \n \n \n \n \n 第一次會議PDF \n', 'tags': '', 'url': 'bg3 第一次小組會議.html'}, {'title': 'bg3 第二次小組會議', 'text': '第三組第二次會議 \n 會議流程: 1.直播會議,組員簽到 2.討論工作分配 3.問題提問 \n 作業二: \n \n \xa0根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊 為了完成作業 \n \xa0的四輪機器人需要做些什麼? \n \xa0您需要從 https://cyberbotics.com/doc/guide/index 了解 什麼來實現四輪機器人？ \n \n 注意事項: \n \n 作業二必須在 4/23 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 \n 每周務必上傳進度。 \n \xa0不會做的可以問會的同學或在 gitter 上發問。 \n 請依每個人的作業二pdf檔、網站內容，進行互評。 \n \n \n 第二次小組會議.pdf \n', 'tags': '', 'url': 'bg3 第二次小組會議.html'}, {'title': 'bg3 第三次小組會議', 'text': '會議流程 : 1. 直播會議 , 組員簽到 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 2.討論工作分配 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 3.問題提問 \n 作業三 : \n 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshape 提出一個機電一體化項目。 \n 注意事項 : \n \n 作業三必須在 5/28 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 \n 每周務必上傳進度。 \n 不會做的可以問會的同學或在 gitter 上發問。 \n 請依每個人的作業三 pdf 檔、網站內容，進行互評。 https://docs.google.com/forms/d/e/1FAIpQLSeBw2zOZZvLzREkonbtrEeMLixmSVqsxGwq7LZekra2lcBXgQ/viewform \n \n \n \n /downloads/第三次開會紀錄 作業三.pdf \n', 'tags': '', 'url': 'bg3 第三次小組會議.html'}, {'title': 'bg3 第四次小組會議', 'text': '虛擬主機講解 \n \n', 'tags': '', 'url': 'bg3 第四次小組會議.html'}, {'title': 'bg3 第五次小組會議', 'text': '延續上禮拜的虛擬主機講解 \n \n', 'tags': '', 'url': 'bg3 第五次小組會議.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': '', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'four-wheeled robot', 'text': '從  https://www.coppeliarobotics.com/helpFiles/index.html 龐大的資料中， 可以抓出幾個重點章節， BubbleRob tutorial 、 Line following BubbleRob tutorial 、 External controller tutorial 、 Simulation dialog 、 Simulation \n BubbleRob tutorial :  設計簡單的移動機器人 BubbleRob 時嘗試介紹很多 CoppeliaSim 功能。  \n Line following BubbleRob tutorial :  在本教程中，我們在擴展 BubbleRob 的 功能，以使他遵循基礎上的規則。   \n External controller tutorial :  研究在 CoppeliaSim 中，有好幾種方法可以控 制機器人或模擬   \n Simulation dialog & Simulation : 此教程主要在教如何設置 bubbleRob 機器 人，在上學期我們有實際操作過。 \n', 'tags': '', 'url': 'four-wheeled robot.html'}, {'title': 'Portable system', 'text': '將可攜系統中的 python3.7.3 更新至 python3.8.2 版本 \n step1 先在自己資料夾內新增一個 cd2020，然後在 cd2020 內新增一個資料 夾 data，在 data 內再新增 py382 及 wscite432、portablegit。 \n step2 進入  ptrhon  官網 \n step3 到  downloads  內點選  Latest Python 3 Release - Python 3.8.2 \n step4 滑到最下面，找到  Windows x86-64 executable installer \xa0下載 \n step5 開始下載，把 pip 選項取消，按 next 把檔案下載至資料夾 py382 \n step6 下載 SciTE 系統  full 64-bit download ，下載完後解壓縮到 data 下的 wscite432 \n step7 建立 start.bat 及 stop.bat \n step8 下載 MSYS2  msys2-x86_64-20190524.exe  到 data 下 \n step9 下載  PortableGit 64-bit Git for Windows Portable  到 portablegit 下 \n step10 安裝 pip，到  https://bootstrap.pypa.io/get-pip.py  頁面，另存新檔 到 data 下 \n step11 執行指令，將 python3.8.2 版本缺少的模組下載下來 python get-pip.py pip install flask bs4 lxml pelican markdown flask_cors leo \n \n', 'tags': '', 'url': 'Portable system.html'}, {'title': 'Efficient random grouping for this course', 'text': '先了解程式裡導入的模組和模組中的語法、迴圈:  request、ast.literal_eval、 random、for迴圈 \n Request模組  : 如果想要使用 Python 來下載網頁上的資料，最基本的作法就是 以 requests 模組建立適當的 HTTP 請求，透過 HTTP 請求從網頁伺服器下載指 定的資料，這種方式雖然步驟比較繁瑣，也需要一點通訊協定的基礎，但是絕大部 分的網路爬蟲或除錯問題都可以靠這個架構解決 \n 參考資料 :  https://blog.gtwang.org/programming/python-requests-module-tutorial/ \n ast.literal_eval  : 簡單點說 ast 模組就是幫助 Python 應用來處理抽象的語法解 析的。而該模組下的 literal_eval()函式：則會判斷需要計算的內容計算後是 不是合法的 python 型別，如果是則進行運算，否則就不進行運算。 \n 參考資料 :  https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/364629/ \n Random  : 要使用到隨機亂數抽取的功能就要使用到 random 套件  以下示範在已知的數字清單中亂數抽取一個數字 ， 例如 :  import random x=random.choice([1,3,5,7,9]) print(x) >>1 \n 參考資料 :\xa0 https://kk665403.pixnet.net/blog/post/403974404-%5Bpython%5D-python-ramdom%E9%9A%A8%E6%A9%9F%E4%BA%82%E6%95%B8%E7%B0%A1%E6%98%93%E7%94%A8%E6%B3%95 \n for 迴圈  : 在計算機科學是一種程式語言的疊代陳述，能夠讓程式碼反覆的執 行。它跟其他的迴圈，如 while 迴圈，最大的不同，是它擁有一個迴圈計數 器，或是迴圈變數。這使得 for 迴圈能夠知道在疊代過程中的執行順序。 \n 參考資料 :  https://zh.wikipedia.org/wiki/For%E8%BF%B4%E5%9C%88 \n', 'tags': '', 'url': 'Efficient random grouping for this course.html'}, {'title': 'Assignment2', 'text': '', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'Topic 0', 'text': '\xa0Topic 0: From Digital to Industrial + Engineering Product Design Collaboration \n DigitalProductCollaboration.pdf \n 這篇是再說 通過設計協作創建更好的產品 ，討論如何協同設計與介紹一些協同的工具。 \n 裡面有提到一些 : \n FlGMA:  \n 這是一個協作優先的共享工作區工具。 Figma非常適合在 其中有多個人設計文件的相同區域。您可以觀看隊友設計 或在同一設計上一起工作實時。 \n MARVEL :  \n 雖然 Figma傾向於感覺更自由和靈活，但 Marvel允許更標 準化的形式 合作。這也使我們的客戶可以輕鬆地與我們合 作 。 \n Zeplin:  \n 是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工 作。 \n Quip:  \n 是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄 並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。 \n 合作的過程 :  \n 階段 1 線框與集思廣益 階段 2：研究與 框架 階段 3：迭代和反饋 階段 4：客戶的反饋和發展 \n 最終結果 \n Press Play 的實時繪圖動畫是工作中設計協作的一個範 例。一隊跨學科專家一起解決更大的設計和開發挑戰含義。沒有設計協作，我們將找不到理想的交集用戶體驗，視覺和技術。設計協作需要解決建築中伴隨的複雜， 通過 關鍵問題 的產品和經驗。 利用多個團隊成員的專業知識跨學科的設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。借助正確的思維方式，工具和流程，進行設計協作使團隊能夠通過創造性思維和迭代來更深入。 \n', 'tags': '', 'url': 'Topic 0.html'}, {'title': 'Topic 1', 'text': 'Mechanical Design Process \n MechanicalDesignProcess.pdf . \n Ch1 成功的設計: \n 第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。 \n Ch2 構建設計:  \n 第二章是在說設計產品的流程，設計都將僅從產品構思開始，將通過圖紙記錄設計，以便能夠以可重複的方式構建更多產品方式。 \n  Ch3結構上的考慮:  \n 以“堅實的基礎”為基礎，以便其餘設計可以以此為基礎。 本章將重點介紹 : \n  1.利用材料概念的強度提出結構解決方案  \n 2.定義考慮我們電子產品結構設計的通用流程  \n 3.看一些具體說明一般概念的示例  \n Ch4材料與工藝:  \n 現在已經有了前面設計的結構基礎，將開始實踐本章的“回歸基礎”，然後遵循產品規格，但現在我們將回到成本考慮因素。 通過重新設計“檢驗標準”，我們將繼續設計更多“建築模塊” ，設計師可以使用確定其外殼零件的最佳材料和工藝。 選擇組成裝配體的各個零件的材料和過程，設計師還得考慮了產品的組裝和維修。 \n', 'tags': '', 'url': 'Topic 1.html'}, {'title': 'Assignment3', 'text': 'Assignment3 \n 表15.1教學方法和教學方式 \n \n \n \xa0 \n 為了解決這個問題，許多知名大學填充在線和住宅研究生課程。機電一體化，機器人和其他學科是教育的熱門話題。 \n 15.2.2學院教職員工 \n 大學教學人員，講師和教授理想情況下是成熟的並且具有一些實際的工業經驗。沒有經過真正的教學培訓，他們就他們被教，理論豐富，與學生的聯繫很少興趣或最終職業。大多數教學人員很少或沒有正規在教學，課堂管理或法律和道德事務方面的培訓。《美國新聞與世界報導》每年對排名靠前的學校進行排名，但這一排名通常大致反映研究費用，如果獲得博士學位，適當的人員，在這些人員中具有終端學位和研究員身份他們的機構。該等級可以包括畢業率和保留率。教學可能會為每位工作人員開出處方，但肯定是較低級的比資助合同續簽方面的研究更重要。諸如英國教學質量評估（TQA）之類的努力旨在在大多數情況下，突出並獎勵學校和學院的良好教學實踐研究評估練習（RAE）處理研究的方式相同。它是大學工作人員有責任很好地進行研究和教學在TQA和RAE審核中都提高評分。在美國，工程各部門均接受定期的全國ABET認證程序，但僅在學士學位級別。但是，什麼是最適合學生的呢？ \n 15.2.3大學生 \n 以美國為例，許多工科學生在重點突出的課程（例如電氣工程），可以選擇其專業在第一年或第二年。與這些研究同時，學生將接觸道德，法律問題和陳述。在歐洲，學生可以進入程序已經知道他們選擇的領域並經歷了四年的主題研究。一些學校在最後一年之前會注入工作經驗其他人從事最後一年的學生項目。毋庸置疑，成功的學生會學得很好缺乏學習能力的學生傾向於工程技能和對工程的興奮做得不好，經常轉移到其他（自認為更容易）的程序中，或者機構。學生如何學習科學是一種眾所周知的構想，大學入學前的技術，工程和數學（STEM）是主要指標關於大學生選擇哪些研究領域；這在全球範圍內有所不同如本章末尾所示。儘管有獎學金和經濟援助，位置，需求和社會地位確實可以確定哪些機構對某人可行申請人。全球的工科學校有些挑剔，需要四或甚至五年的學士學位學習。機電一體化無疑是在學士學位，碩士和博士學位級別任教，但通常由熱情的工作人員擁護。是否吸引學生攻讀研究生學位以幫助教職員工研究和教學而不是工業從業？這是最適合學生？ \n 15.2.4機電一體化用人單位 \n 想像一下，現在學生已經成功地在為了本章而生產或使用機電一體化的技術公司系統。這類雇主認為需要專業知識來促進他們的產品，uct或服務，並對即將畢業的畢業生或技術人員寄予厚望。在法律和醫學專業中，新人必須完成居住以在獲得許可之前必須先獲得認證，而在工程實踐中機構中的成員資格在很大程度上被認為是可選的，昂貴的，並且不相關的。對於新員工來說，這是影子操作經驗豐富的工程師的通用做法直到他們可以自行分配給項目專家為止。由此，讀者可以推斷出項目失敗的原因，成本超支的發生方式以及產品從來沒有像客戶期望的那樣工作。什麼對公司最合適？ \n 15.3機電一體化：現實世界中的小插圖精選 \n 以下內容包含了本章作者的三個真實的現實世界小插曲旨在反映機電一體化教育中必要主題的經驗。的Cor為了保密起見，省略了名稱或公司名稱，但希望讀者會發現這些示例很有用。每個小節將簡要描述實際系統及其設計方式，問題如何自我呈現，解決方案問題的解決，最重要的是，什麼教育技能使機電工程師解決該問題。第一種情況很多比其他兩個更詳細地說明了這一點。 \n 15.3.1注塑成型監控系統 \n 總覽一家注塑公司與系統工程公司簽約公司負責為其主要地點設計和實施生產監控系統最多可運行40台高科技成型機。大約運行35台機器每天有一天定期生產數千萬個塑料小零件日常。這些成分按重量包裝在盒子中，然後傳遞到合格的資產控制和庫存。圖15.1顯示了典型的注塑成型（IM）廠。 \n \n 工廠在逐個工作的基礎上生產各種物品。換工作在任何機器上進行清洗，都需要付出很大的努力才能清除以前的有色原料-里亞爾和必要的模具已安裝，新的液態塑料通過下一份工作的系統。機械師可能會使機器循環多次，直到新零件是完美的，但是這些測試操作永遠都不應出現在產品中，位置計數。 \n 要求摘要 \n 在不贅述的情況下，系統的要求包括在24×7的基礎上測量每台機器的每個循環，比較根據工廠工作指令的實際表現，提供顯示屏整個工廠中，並將庫存數據定期下載到大型機電腦。從數據完整性的角度來看，這實際上很難做到因為並非所有機器週期都會產生產品，例如技術人員加載新作業或清除卡紙。 \n 系統設計 \n 與行業客戶多次會面後，圖15.2出現了。初步的系統設計。大多數情況下主要組件都是相當標準的工業自動化設置。可編程邏輯控制器（PLC）是耐斷電的試用過程控制代理，可提供具有本地存儲，通信功能以及多個輸入和輸出數據端口。在設計了系統之後，以下是迄今為止無法預料的問題經過更詳細的系統現場檢查後提出： \n \n 1.如何長距離連接機器信息？工廠已經過去了一英里長。 \n 2.如何在如此長的距離上連接所有系統設備？電的信號均為低質量信號，並且產生了明顯的噪聲大部分來自註塑機。 \n 3.顯示多少信息有用？ \n 4.操作員和技工如何提供特定數據進行顯示？解決這些問題後，實際上確實需要重新設計系統以及購買其他軟件和硬件的過程編碼並安裝。 \n 問題領域 \n 在系統的日常運行中，以下意外情況出現了： \n 1.在操作期間隨時可能出現凍結的隨機數據。 \n 2.主工廠電源中斷或停電後數據丟失。 \n 3.處理機器的維護和維修狀態週期。 \n 4.班次報告顯示錯誤時間。 這些問題似乎表明系統中存在致命缺陷，但可以解決 使用機電一體化原理。本章作者的解決方案摘要如下： \n 15.3.2在小型計算機上執行大型機代碼 \n 總覽\xa0某公司正在使用大型計算機來進行高級CADCAM和圖形處理，ics。每個設計站的成本超過50,000美元，大型機的租賃和運營\xa0圖15.2初步系統設計\xa0 \n 246 D.羅素 \n 系統每月超過100,000美元。顧問發現一家公司發現了一種在2萬美元的小型計算機上運行大型機指令的方法，對小型計算機的主板進行一些細微的調整。 \n 發明概述 \n 圖15.3說明瞭如何訪問和執行大型機指令。小型計算機通過修改小型計算機主板而被切割帶有專有固件。虛線所示的原理圖框是唯一的需要修改固件。小型計算機字大小必須比較可以使用從主機購買的大型機指令芯片組（32位）製造商。 \n 問題領域 \n 系統運行良好，CADCAM應用成功並且是傳統圖形工作站的廉價替代品。一天之後\xa0小型計算機操作系統升級後，系統完全無法運行吃了嵌入在CADCAM序列中的大型計算機指令拒絕導緻小型計算機返回非法指令陷阱和完整的CADCAM故障。 \n 這個問題表明系統存在致命缺陷，最終被證明無法解決。能夠導致項目中止。本章作者的解釋是總結在第。 15.5.2。 \n \n 15.3.3機械不穩定的系統 \n 總覽許多研究人員研究了各種將控制歸納為行為的方法。 倒立鑽機。該系統適合自適應，智能，演進- 和學習控制。圖15.4是一個這樣的鑽機的照片， 作者工作[3]。從本質上講，購物車是在左/右行駛 模式在計算機命令上。實驗被限制在兩米長的軌道上 兩端都有碰撞傳感器。推車上的桿子是自由鉸接的，但很有限 大約±10°。如果系統超出範圍，則推車上的運動是 停了問題是通過左右移動推車來平衡桿 不應與立杆平衡動作混淆。 \n 問題領域 \n 兩個主要問題是確保系統採用其學習算法- 從初始隨機但合法的狀態開始，以便控制器可以識別它 然後進行控制偏移，並處理從動輪打滑 當購物車方向反轉時。本章作者對解決方案的解釋- 第一個問題的概述在本節中。 \n 15.3.4案件摘要 \n 對於以上三種情況中的每一種，這些問題情況如何 出現在下面的章節中。 15.5鼓勵讀者討論自己的問題 在閱讀該部分之前，請先與學生的想法聯繫起來。看完之後 作者的評論，然後讀者應該討論他們的教育模塊 機構或公司本來可以使創新工程師解決這些問題？ \n \n 也許我們大學中缺少的教育經歷是深入介紹系統工程和系統集成。', 'tags': '', 'url': 'Assignment3.html'}, {'title': 'Online teching', 'text': '2020/04/16 線上課程 \n 第一堂課 \n \n 第二堂課 \n \n 第四堂課 \n \n \n', 'tags': '', 'url': 'Online teching.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};